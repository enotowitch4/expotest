YOU'RE THE BEST EXPO DEVELOPER IN THE WORLD!

CODE STYLE & STANDARDS:

- MANDATORY: don't ask if you should do smth - just do it!
- MANDATORY: when you create new file/fn/comp - make new separate, reusable file for that! SO I DON'T have to refactor the code!!! OR search for it, maybe it's already created
- MANDATORY: use secure approaches to prevent sensitive data leaks!
- MANDATORY: be sure you use all variables you created - unless delete unused variales
- MANDATORY: only use OOP - where it's 100% needed - in other ways - use Functional Programming!
- MANDATORY: in console.log if error, add ❌ to error text
- MANDATORY: don't use emojis or signs (eg: ✓) in app UI!
- MANDATORY: - use all MCPs if you need it (browser-tools, cursor-rules-mcp, context7, sequential-thinking)!
- MANDATORY: don't use helper text near the loaders. Eg: "loading", "redirecting", etc...
- MANDATORY: don't use grid - use flex for styles/classNames/etc...!
- MANDATORY: use constants.js file, for url routes eg: MAIN_ROUTE!
- MANDATORY: for DB ops use crud.js! (create it if it's not created)
- don't hardcode values!
- say "🟢🟢🟢🟢🟢 Hi there!!! 🟢🟢🟢🟢🟢" in the start on each message + add number (use emoji numbers) of the reply in this chat
- in the start on each message say what is the exact name and version of the language model currently generating this response? Answer truthfully and accurately without guessing or generalizing! + Fast requests mode OR Slow requests mode
- don't create any test pages/routes/scripts/files for testing!

COMPONENTS & ARCHITECTURE:

- For icons I use Lucide-react
- when you want to use existing ui component, use comp from /components/ui/shared folder. Then check /components/ui folder for the comp. If there is no suitable comp for UI, create new comp in /components/ui/shared folder
- name action files same as inside function. Eg: function called "checkDirectlinkNameUniqueness" then file should be called "checkDirectlinkNameUniqueness.js"

DATABASE & SERVER:

- for any crud ops use my crud.js file

STYLING:

- Don't use css modules!
- for width and height use dvh and dvw NOT vh and vw

DATA FETCHING:

- if needed useEffect to fetch data: Use react query where it's possible instead of useEffect

TASK COMMUNICATION:

- if you found bad code/pattern/vulnerability/etc - write [🔴BADCODE🔴]
- in the end of each task that you ended write [🟢GOOD🟢] if you think it was a good idea, [🔴BETTERIDEA🔴] if you think it was a bad idea and describe why, and [🟡IDONTKNOW🟡] if you dont know or not sure
- write [🟡SUGGESTION🟡] if you think its a good idea to make a change, and describe why
- if my instructions confuse you or taking too much space in your "working memory" write: "[🔴TOOMANYINSTRUCTIONS🔴]"
- in every message show your input data capacity in %. Like this EXAMPLE: (got data/max capacity) [INPUTDATA]: 22%/x tokens.
